# Run MLPerf inference Retinanet

name: MLPerf inference retinanet

on:
  pull_request_target:
    branches: [ "main", "dev" ]
    paths:
      - '.github/workflows/test-mlperf-inference-retinanet.yml'
      - '**'
      - '!**.md'

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: [ "3.12" ]
        backend: [ "onnxruntime", "pytorch" ]
        implementation: [ "python", "cpp" ]
        exclude:
          - backend: pytorch
            implementation: cpp
          - os: windows-latest
            implementation: cpp
          - os: macos-latest
            implementation: cpp

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}
    - name: Configure git longpaths (Windows)
      if: matrix.os == 'windows-latest'
      run: |
        git config --system core.longpaths true
    - name: Install cm4mlops on Windows
      if: matrix.os == 'windows-latest'
      run: |
        $env:CM_PULL_DEFAULT_MLOPS_REPO = "no"; pip install cm4mlops
    - name: Install dependencies on Unix Platforms
      if: matrix.os != 'windows-latest'
      run: |
        CM_PULL_DEFAULT_MLOPS_REPO=no pip install cm4mlops
    - name: Pull MLOps repo
      run: |
        cm pull repo --url=${{ github.event.pull_request.head.repo.html_url }} --checkout=${{ github.event.pull_request.head.ref }}

    - name: Test MLPerf Inference Retinanet using ${{ matrix.backend }} on ${{ matrix.os }}
      if: matrix.os == 'windows-latest'
      run: |
        cm run script --tags=run,mlperf,inference,generate-run-cmds,_submission,_short --submitter="MLCommons" --pull_changes=yes --pull_inference_changes=yes --hw_name=gh_${{ matrix.os }} --model=retinanet --adr.loadgen.tags=_from-pip --pip_loadgen=yes --implementation=${{ matrix.implementation }} --backend=${{ matrix.backend }} --device=cpu --scenario=Offline --test_query_count=5 --quiet  -v --target_qps=1
    - name: Test MLPerf Inference Retinanet using ${{ matrix.backend }} on ${{ matrix.os }}
      if: matrix.os != 'windows-latest'
      run: |
        cm run script --tags=run,mlperf,inference,generate-run-cmds,_submission,_short --submitter="MLCommons" --pull_changes=yes --pull_inference_changes=yes --hw_name=gh_${{ matrix.os }}_x86 --model=retinanet --implementation=${{ matrix.implementation }} --backend=${{ matrix.backend }} --device=cpu --scenario=Offline --test_query_count=5 --adr.compiler.tags=gcc --quiet  -v --target_qps=1
    - name: Push Results
      if: github.repository_owner == 'gateoverflow'
      env:
          USER: "GitHub Action"
          EMAIL: "admin@gateoverflow.com"
          GITHUB_TOKEN: ${{ secrets.TEST_RESULTS_GITHUB_TOKEN }}
      run: |
        git config --global user.name "${{ env.USER }}"
        git config --global user.email "${{ env.EMAIL }}"
        git config --global credential.https://github.com.helper ""
        git config --global credential.https://github.com.helper "!gh auth git-credential"
        git config --global credential.https://gist.github.com.helper ""
        git config --global credential.https://gist.github.com.helper "!gh auth git-credential"
        cm run script --tags=push,github,mlperf,inference,submission --repo_url=https://github.com/mlcommons/mlperf_inference_test_submissions_v5.0 --repo_branch=auto-update --commit_message="Results from Retinanet GH action on ${{ matrix.os }}" --quiet
